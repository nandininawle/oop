/*
Name: Nandini Nawle
Batch:B3
Cno:UEC2022258

*/


import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;
import java.util.*;

class DeadLockTest
{
	public static void main(String[] args) throws InterruptedException
	{
		Data data=new Data();
		Thread t0=new Thread(new Runnable()
		{
			@Override
			public void run()
			{
				try
				{
				data.task0();
				} catch (InterruptedException e)
				{
					e.printStackTrace();
				}
			}
		});
		Thread t1=new Thread(new Runnable()
		{
		@Override
		public void run()
		{
			try
			{
				data.task1();
			} catch (InterruptedException e)
			{
				e.printStackTrace();
			}
		}
		});
		t0.start();
		t1.start();
		t0.join();
		t1.join();
		System.out.println("Program execution complete");
	}
}



class Data
{
	private final Object lock0=new Object();
	private final Object lock1=new Object();
	void task0() throws InterruptedException
	{
		String name=Thread.currentThread().getName();
		System.out.println(name+" trying to get lock0");
		synchronized(lock0)
		{
			System.out.println(name+" got lock0");
			Thread.sleep(3000);
			System.out.println(name+" trying to get lock1");
	
			synchronized(lock1)
			{
				System.out.println(name+" got lock1");
				Thread.sleep(3000);
			}
		}
		System.out.println(name+" released both locks");
	}
	void task1() throws InterruptedException
	{
		String name=Thread.currentThread().getName();
		System.out.println(name+" trying to get lock1");
		synchronized(lock1)
		{
			System.out.println(" got lock1");
			Thread.sleep(3000);
			System.out.println(name+" trying to get lock0");
			synchronized(lock0)
			{
				System.out.println(name+" got lock0");
				Thread.sleep(3000);
			}
		}
		System.out.println(name+"released both locks");
	}
}





/*
research@research-desktop:~/Desktop/UEC2022258$ java DeadLockTest
Thread-0trying to get lock0
Thread-1trying to get lock1
got lock1
Thread-0got lock0&quot
Thread-1trying to get lock0
Thread-0trying to get lock1

*/
